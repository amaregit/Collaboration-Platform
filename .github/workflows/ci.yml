name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Setup test database
      run: |
        psql -h localhost -U postgres -d test_db -f database-schema.sql
      env:
        PGPASSWORD: postgres

    - name: Run tests
      run: bun run test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        JWT_ACCESS_SECRET: test-secret
        JWT_REFRESH_SECRET: test-refresh-secret
        NODE_ENV: test

    - name: Run linter
      run: bun run lint

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Build application
      run: bun run build

    - name: Build Docker image
      run: docker build -t collaboration-platform:${{ github.sha }} .

    - name: Run Docker container test
      run: |
        docker run -d --name test-container -p 4000:4000 collaboration-platform:${{ github.sha }}
        sleep 10
        curl -f http://localhost:4000/health || exit 1
        docker stop test-container